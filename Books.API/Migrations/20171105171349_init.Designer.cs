// <auto-generated />
using Books.API.DataModel;
using Books.API.DataModel.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Books.API.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20171105171349_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Books.API.DataModel.Entities.Book", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("Isbn");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Books.API.DataModel.Entities.BookItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Barcode");

                    b.Property<string>("BookId");

                    b.Property<int>("Condition");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookItems");
                });

            modelBuilder.Entity("Books.API.DataModel.Entities.Rent", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BookItemId");

                    b.Property<DateTime?>("End");

                    b.Property<string>("MemberId");

                    b.Property<DateTime?>("ReturnDate");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("BookItemId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("Books.API.DataModel.Entities.BookItem", b =>
                {
                    b.HasOne("Books.API.DataModel.Entities.Book", "Book")
                        .WithMany("BookItems")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("Books.API.DataModel.Entities.Rent", b =>
                {
                    b.HasOne("Books.API.DataModel.Entities.BookItem", "BookItem")
                        .WithMany()
                        .HasForeignKey("BookItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
